<?php

namespace Blueways\BwEmail\Controller;

use TYPO3\CMS\Backend\Template\Components\ButtonBar;
use TYPO3\CMS\Backend\Utility\BackendUtility;
use TYPO3\CMS\Core\Imaging\Icon;
use TYPO3\CMS\Core\Utility\GeneralUtility;

class ViewModuleController extends \TYPO3\CMS\Viewpage\Controller\ViewModuleController
{

    /**
     * @var array|null
     */
    protected $pageRecord;

    /**
     * @throws \TYPO3\CMS\Backend\Routing\Exception\RouteNotFoundException
     */
    protected function registerButtons()
    {
        parent::registerButtons(); // TODO: Change the autogenerated stub

        if ($this->pageRecord['doktype'] === 117) {
            $buttonBar = $this->view->getModuleTemplate()->getDocHeaderComponent()->getButtonBar();
            $refreshButton = $buttonBar->makeLinkButton()
                ->setClasses('viewmodule_email_button')
                ->setHref('#')
                ->setTitle($this->getLanguageService()->sL('LLL:EXT:bw_email/Resources/Private/Language/locallang.xlf:sendMail'))
                ->setIcon($this->view->getModuleTemplate()->getIconFactory()->getIcon('actions-email',
                    Icon::SIZE_SMALL))
                ->setDataAttributes([
                    'wizard-uri' => $this->getPageWizardUri(),
                    'modal-title' => $this->getLanguageService()->sL('LLL:EXT:bw_email/Resources/Private/Language/locallang.xlf:sendPage'),
                    'modal-cancel-button-text' => $this->getLanguageService()->sL('LLL:EXT:bw_email/Resources/Private/Language/locallang.xlf:modalCancelButton'),
                    'modal-send-button-text' => $this->getLanguageService()->sL('LLL:EXT:bw_email/Resources/Private/Language/locallang.xlf:modalSendButton'),
                ]);
            $buttonBar->addButton($refreshButton, ButtonBar::BUTTON_POSITION_LEFT, 1);
        }
    }

    /**
     * @return string
     * @throws \TYPO3\CMS\Backend\Routing\Exception\RouteNotFoundException
     */
    private function getPageWizardUri()
    {
        $routeName = 'ajax_wizard_modal_page';
        $uriArguments['arguments'] = json_encode([
            'page' => $this->pageRecord['uid']
        ]);
        $uriArguments['signature'] = \TYPO3\CMS\Core\Utility\GeneralUtility::hmac(
            $uriArguments['arguments'],
            $routeName
        );
        $uriBuilder = GeneralUtility::makeInstance(\TYPO3\CMS\Backend\Routing\UriBuilder::class);
        return (string)$uriBuilder->buildUriFromRoute($routeName, $uriArguments);
    }

    /**
     * @param \TYPO3\CMS\Extbase\Mvc\View\ViewInterface $view
     */
    protected function initializeView(\TYPO3\CMS\Extbase\Mvc\View\ViewInterface $view)
    {
        $pageIdToShow = (int)GeneralUtility::_GP('id');
        $this->pageRecord = BackendUtility::getRecord('pages', $pageIdToShow);

        parent::initializeView($view); // TODO: Change the autogenerated stub

        $pageRenderer = $this->view->getModuleTemplate()->getPageRenderer();
        $pageRenderer->loadRequireJsModule('TYPO3/CMS/BwEmail/EmailWizard');
    }
}
