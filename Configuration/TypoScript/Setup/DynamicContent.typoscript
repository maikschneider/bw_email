################################################
#### DYNAMIC CONTENT LIB FOR USAGE IN FLUID ####
################################################
#
#  EXAMPLE
#  ---------------
#  <f:cObject typoscriptObjectPath="lib.dynamicContent" data="{pageUid: '{data.uid}', colPos: '0', wrap: '<div class=\"hero\">|</div>'}" />
#  <f:cObject typoscriptObjectPath="lib.dynamicContent" data="{pageUid: '{data.uid}', colPos: '0', templateFile: 'LandingpageBox.html'}" />
#
#
#  COLUMN NUMBERS
#  ---------------
#
#  0  = main
#  1  = left
#  2  = right
#  3  = border
#
#################
lib.dynamicContent = COA
lib.dynamicContent {
	5 = LOAD_REGISTER
	5 {
		colPos.cObject = TEXT
		colPos.cObject {
			field = colPos
			ifEmpty.cObject = TEXT
			ifEmpty.cObject {
				value.current = 1
				ifEmpty = 0
			}
		}


		templateFile.cObject = TEXT
		templateFile.cObject {
			field = templateFile
			ifEmpty.cObject = TEXT
			ifEmpty.cObject {
				value.current = 1
				ifEmpty = Textmedia.html
			}
		}
		pageUid.cObject = TEXT
		pageUid.cObject {
			field = pageUid
			ifEmpty.data = TSFE:id
		}
		contentFromPid.cObject = TEXT
		contentFromPid.cObject {
			data = DB:pages:{register:pageUid}:content_from_pid
			data.insertData = 1
		}
		wrap.cObject = TEXT
		wrap.cObject {
			field = wrap
		}
	}
	20 = CONTENT
	20 {
		table = tt_content
		select {
			includeRecordsWithoutDefaultTranslation = 1
			orderBy = sorting
			where = {#colPos}={register:colPos}
			where.insertData = 1
			pidInList.data = register:pageUid
			pidInList.override.data = register:contentFromPid
		}
		stdWrap {
			dataWrap = {register:wrap}
			required = 1
			if.value = Textmedia.html
			if.equals.data = register:templateFile
		}
	}
	30 < .20
	3 0{
		renderObj = FLUIDTEMPLATE
		renderObj.file.dataWrap = {$styles.templates.partialRootPath}{register:templateFile}
		renderObj.file.dataWrap.stdWrap.if.value = Textmedia.html
		renderObj.file.dataWrap.stdWrap.if.equals.data = register:templateFile
		renderObj.file.dataWrap.stdWrap.if.negate = 1
		stdWrap.if >
	}

	90 = RESTORE_REGISTER
}
